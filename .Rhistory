"BIC" = "darkorange",
"looDeviance" = "black",
"5-fold" = "darkgrey",
"10-fold" = "green4",
"50-fold" = "purple",
"80-fold" = "brown"
)) +
theme(text = element_text(face = "bold"),
plot.subtitle = element_text(size=10, face="bold"),
axis.text = element_text(size=8),
legend.title = element_text(size=10),
legend.text = element_text(size=8))
}
p <- ggarrange(plotlist = plot_ls, nrow=2,ncol=1, common.legend = T,legend = "right")
p
plot_ls <- list()
for(rn in c("lm","lr")){
agg_df <- agg_df_ls[[rn]]
plot_df <- NULL
for(en in c("_median","_q25", "_q75")){
tmpdf <- pivot_longer(agg_df[,c("id", paste0(c("aic_diff", "bic_diff", "nic_diff", "nicc_diff",
"k_5_diff", "k_10_diff", "k_50_diff", "k_80_diff"),en))],
cols = ends_with(en),
names_to = "ic_type",
values_to = paste0("ic_diff",en))
tmpdf$ic_type <- gsub(en,"", tmpdf$ic_type)
if(is.null(plot_df)){plot_df <- tmpdf}
else{
plot_df <- merge(plot_df, tmpdf)
}
}
plot_df$ic_diff <-  plot_df$ic_diff_median
plot_df$ic_diff_l <- plot_df$ic_diff_q25
plot_df$ic_diff_u <- plot_df$ic_diff_q75
plot_df <- merge(plot_df,simulation_conditions, by="id", all.x=T) %>% as.data.frame()
plot_df$cluster_strength <- factor(plot_df$cluster_strength, levels=c("weak", "moderate", "strong"))
plot_df$ic_type <- stringr::str_to_upper(gsub("_diff","",plot_df$ic_type))
plot_df$ic_type <- factor(plot_df$ic_type, levels=c("NICC", "NIC","AIC","BIC",
"K_5","K_10","K_50","K_80"))
levels(plot_df$ic_type) <- c("NICc","NIC","AIC","BIC",
"5-fold","10-fold","50-fold","80-fold")
plot_df <- plot_df %>%
mutate(x_adjusted = case_when(
ic_type %in% c("5-fold") ~ n_ttl_betas + 0.6,
ic_type %in% c("10-fold") ~ n_ttl_betas + 0.45,
ic_type %in% c("50-fold") ~ n_ttl_betas + 0.3,
ic_type %in% c("80-fold") ~ n_ttl_betas + 0.15,
TRUE ~ n_ttl_betas
))
plot_ls[[rn]] <- ggplot(data = plot_df, aes(x = x_adjusted, y = ic_diff, color = ic_type)) +
geom_point(size=1.5) +
geom_line() +
geom_errorbar(aes(ymin = ic_diff_l, ymax = ic_diff_u),width=0.2) +
geom_hline(aes(yintercept=0)) +
scale_x_continuous(limits = c(5, 11), breaks = seq(5, 11, 1)) +
# coord_trans(y = "sqrt") +
facet_wrap(~ cluster_strength, ncol=3, nrow=1, scales="free_x") +
labs(subtitle = ifelse(rn=="lr", "Binomial", "Gaussian"),
x = NULL,
y = NULL,
color = "Criterion") +
theme_bw()+
scale_color_manual(values = c(
"NICc" = "red",
"NIC" = "lightblue3",
"AIC" = "blue",
"BIC" = "darkorange",
"looDeviance" = "black",
"5-fold" = "darkgrey",
"10-fold" = "green4",
"50-fold" = "purple",
"80-fold" = "brown"
)) +
theme(text = element_text(face = "bold"),
plot.subtitle = element_text(size=10, face="bold"),
axis.text = element_text(size=8),
legend.title = element_text(size=10),
legend.text = element_text(size=8))
}
p <- ggarrange(plotlist = plot_ls, nrow=2,ncol=1, common.legend = T,legend = "right")
p
plot_ls <- list()
for(rn in c("lm","lr")){
agg_df <- agg_df_ls[[rn]]
plot_df <- NULL
for(en in c("_median","_q25", "_q75")){
tmpdf <- pivot_longer(agg_df[,c("id", paste0(c("aic_diff", "bic_diff", "nic_diff", "nicc_diff",
"k_5_diff", "k_10_diff", "k_50_diff", "k_80_diff"),en))],
cols = ends_with(en),
names_to = "ic_type",
values_to = paste0("ic_diff",en))
tmpdf$ic_type <- gsub(en,"", tmpdf$ic_type)
if(is.null(plot_df)){plot_df <- tmpdf}
else{
plot_df <- merge(plot_df, tmpdf)
}
}
plot_df$ic_diff <-  plot_df$ic_diff_median
plot_df$ic_diff_l <- plot_df$ic_diff_q25
plot_df$ic_diff_u <- plot_df$ic_diff_q75
plot_df <- merge(plot_df,simulation_conditions, by="id", all.x=T) %>% as.data.frame()
plot_df$cluster_strength <- factor(plot_df$cluster_strength, levels=c("weak", "moderate", "strong"))
plot_df$ic_type <- stringr::str_to_upper(gsub("_diff","",plot_df$ic_type))
plot_df$ic_type <- factor(plot_df$ic_type, levels=c("NICC", "NIC","AIC","BIC",
"K_5","K_10","K_50","K_80"))
levels(plot_df$ic_type) <- c("NICc","NIC","AIC","BIC",
"5-fold","10-fold","50-fold","80-fold")
plot_df <- plot_df %>%
mutate(x_adjusted = case_when(
ic_type %in% c("5-fold") ~ n_ttl_betas + 0.6,
ic_type %in% c("10-fold") ~ n_ttl_betas + 0.45,
ic_type %in% c("50-fold") ~ n_ttl_betas + 0.3,
ic_type %in% c("80-fold") ~ n_ttl_betas + 0.15,
TRUE ~ n_ttl_betas
))
plot_ls[[rn]] <- ggplot(data = plot_df, aes(x = x_adjusted, y = ic_diff, color = ic_type)) +
geom_point(size=1.5) +
geom_line() +
geom_errorbar(aes(ymin = ic_diff_l, ymax = ic_diff_u),width=0.2) +
geom_hline(aes(yintercept=0)) +
scale_x_continuous(limits = c(5, 11), breaks = seq(5, 11, 1)) +
# coord_trans(y = "sqrt") +
facet_wrap(~ cluster_strength, ncol=3, nrow=1, scales="free") +
labs(subtitle = ifelse(rn=="lr", "Binomial", "Gaussian"),
x = NULL,
y = NULL,
color = "Criterion") +
theme_bw()+
scale_color_manual(values = c(
"NICc" = "red",
"NIC" = "lightblue3",
"AIC" = "blue",
"BIC" = "darkorange",
"looDeviance" = "black",
"5-fold" = "darkgrey",
"10-fold" = "green4",
"50-fold" = "purple",
"80-fold" = "brown"
)) +
theme(text = element_text(face = "bold"),
plot.subtitle = element_text(size=10, face="bold"),
axis.text = element_text(size=8),
legend.title = element_text(size=10),
legend.text = element_text(size=8))
}
p <- ggarrange(plotlist = plot_ls, nrow=2,ncol=1, common.legend = T,legend = "right")
p
plot_ls <- list()
for(rn in c("lm","lr")){
agg_df <- agg_df_ls[[rn]]
plot_df <- NULL
for(en in c("_median","_q25", "_q75")){
tmpdf <- pivot_longer(agg_df[,c("id", paste0(c("aic_diff", "bic_diff", "nic_diff", "nicc_diff",
"k_5_diff", "k_10_diff", "k_50_diff", "k_80_diff"),en))],
cols = ends_with(en),
names_to = "ic_type",
values_to = paste0("ic_diff",en))
tmpdf$ic_type <- gsub(en,"", tmpdf$ic_type)
if(is.null(plot_df)){plot_df <- tmpdf}
else{
plot_df <- merge(plot_df, tmpdf)
}
}
plot_df$ic_diff <-  plot_df$ic_diff_median
plot_df$ic_diff_l <- plot_df$ic_diff_q25
plot_df$ic_diff_u <- plot_df$ic_diff_q75
plot_df <- merge(plot_df,simulation_conditions, by="id", all.x=T) %>% as.data.frame()
plot_df$cluster_strength <- factor(plot_df$cluster_strength, levels=c("weak", "moderate", "strong"))
levels(plot_df$cluster_strength) <- paste0(levels(plot_df$cluster_strength), " clustering")
plot_df$ic_type <- stringr::str_to_upper(gsub("_diff","",plot_df$ic_type))
plot_df$ic_type <- factor(plot_df$ic_type, levels=c("NICC", "NIC","AIC","BIC",
"K_5","K_10","K_50","K_80"))
levels(plot_df$ic_type) <- c("NICc","NIC","AIC","BIC",
"5-fold","10-fold","50-fold","80-fold")
plot_df <- plot_df %>%
mutate(x_adjusted = case_when(
ic_type %in% c("5-fold") ~ n_ttl_betas + 0.6,
ic_type %in% c("10-fold") ~ n_ttl_betas + 0.45,
ic_type %in% c("50-fold") ~ n_ttl_betas + 0.3,
ic_type %in% c("80-fold") ~ n_ttl_betas + 0.15,
TRUE ~ n_ttl_betas
))
plot_ls[[rn]] <- ggplot(data = plot_df, aes(x = x_adjusted, y = ic_diff, color = ic_type)) +
geom_point(size=1.5) +
geom_line() +
geom_errorbar(aes(ymin = ic_diff_l, ymax = ic_diff_u),width=0.2) +
geom_hline(aes(yintercept=0)) +
scale_x_continuous(limits = c(5, 11), breaks = seq(5, 11, 1)) +
# coord_trans(y = "sqrt") +
facet_wrap(~ cluster_strength, ncol=3, nrow=1, scales="free_x") +
labs(subtitle = ifelse(rn=="lr", "Binomial", "Gaussian"),
x = NULL,
y = NULL,
color = "Criterion") +
theme_bw()+
scale_color_manual(values = c(
"NICc" = "red",
"NIC" = "lightblue3",
"AIC" = "blue",
"BIC" = "darkorange",
"looDeviance" = "black",
"5-fold" = "darkgrey",
"10-fold" = "green4",
"50-fold" = "purple",
"80-fold" = "brown"
)) +
theme(text = element_text(face = "bold"),
plot.subtitle = element_text(size=10, face="bold"),
axis.text = element_text(size=8),
legend.title = element_text(size=10),
legend.text = element_text(size=8))
}
p <- ggarrange(plotlist = plot_ls, nrow=2,ncol=1, common.legend = T,legend = "right")
p
View(plot_df)
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 12, height = 10, bg="white")
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 12, height = 12, bg="white")
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 10, height = 12, bg="white")
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 10, height = 15, bg="white")
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 10, height = 10, bg="white")
p <- annotate_figure(p, top = text_grob("K-fold Deviance Approximation", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 10, height = 10, bg="white")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list = ls())
library(dplyr)
library(rslurm)
library(ggplot2)
library(tidyr)
library(ggpubr)
lr_output_fname <- "run_lm_k_fold.RDS"
lm_output_fname <- "run_lr_k_fold.RDS"
agg_df_ls <- list()
for(rn in c("lr", "lm")){
if(rn == "lr") output <- readRDS(paste0("./res/", lr_output_fname))
if(rn == "lm") output <- readRDS(paste0("./res/", lm_output_fname))
source("./sim_conditions_k_fold.R")
output <- as.data.frame(lapply(output, unlist))
res_df <- as.data.frame(merge(output, simulation_conditions, by="id", all.x=T))
res_df$nicc_diff <- (res_df$nicc1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$nic_diff <- (res_df$nic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$aic_diff <- (res_df$aic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$bic_diff <- (res_df$bic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_5_diff <- (res_df$k_5 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_10_diff <- (res_df$k_10 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_50_diff <- (res_df$k_50 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_80_diff <- (res_df$k_80 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
summa <- function(df){
for(cl in c("nicc_diff", "nic_diff", "aic_diff", "bic_diff",
"k_5_diff", "k_10_diff", "k_50_diff", "k_80_diff") ){
df[[paste0(cl,"_mean")]] <- mean(df[[cl]], na.rm=T)
df[[paste0(cl,"_median")]] <- median(df[[cl]], na.rm=T)
df[[paste0(cl,"_q25")]] <- quantile(df[[cl]],0.025, na.rm=T)
df[[paste0(cl,"_q75")]] <- quantile(df[[cl]],0.975, na.rm=T)
df[[paste0(cl,"_se")]] <- sd(df[[cl]], na.rm=T)/nrow(df)
}
return(df)
}
by_id <- group_by(res_df, id)
agg_df <- do(by_id, summa(.))
agg_df <- distinct(agg_df[,c("id",colnames(agg_df)[endsWith(colnames(agg_df), "_mean") |
endsWith(colnames(agg_df), "_median") |
endsWith(colnames(agg_df), "_q25") |
endsWith(colnames(agg_df), "_q75") |
endsWith(colnames(agg_df), "_se")]) ])
agg_df <- as.data.frame(agg_df)
agg_df_ls[[rn]] <- merge(agg_df, simulation_conditions, by="id", all.x=T)
}
source("./sim_plot_k_fold.R")
p <- annotate_figure(p, top = text_grob("K-fold Deviance Approximation", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 10, height = 10, bg="white")
source("./sim_plot_k_fold.R")
p <- annotate_figure(p, top = text_grob("Approximating K-fold Deviance", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 10, height = 10, bg="white")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list = ls())
library(dplyr)
library(rslurm)
library(ggplot2)
library(tidyr)
library(ggpubr)
lr_output_fname <- "run_lm_k_fold.RDS"
lm_output_fname <- "run_lr_k_fold.RDS"
agg_df_ls <- list()
for(rn in c("lr", "lm")){
if(rn == "lr") output <- readRDS(paste0("./res/", lr_output_fname))
if(rn == "lm") output <- readRDS(paste0("./res/", lm_output_fname))
source("./sim_conditions_k_fold.R")
output <- as.data.frame(lapply(output, unlist))
res_df <- as.data.frame(merge(output, simulation_conditions, by="id", all.x=T))
res_df$nicc_diff <- (res_df$nicc1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$nic_diff <- (res_df$nic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$aic_diff <- (res_df$aic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$bic_diff <- (res_df$bic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_5_diff <- (res_df$k_5 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_10_diff <- (res_df$k_10 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_50_diff <- (res_df$k_50 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
res_df$k_80_diff <- (res_df$k_80 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)
summa <- function(df){
for(cl in c("nicc_diff", "nic_diff", "aic_diff", "bic_diff",
"k_5_diff", "k_10_diff", "k_50_diff", "k_80_diff") ){
df[[paste0(cl,"_mean")]] <- mean(df[[cl]], na.rm=T)
df[[paste0(cl,"_median")]] <- median(df[[cl]], na.rm=T)
df[[paste0(cl,"_q25")]] <- quantile(df[[cl]],0.025, na.rm=T)
df[[paste0(cl,"_q75")]] <- quantile(df[[cl]],0.975, na.rm=T)
df[[paste0(cl,"_se")]] <- sd(df[[cl]], na.rm=T)/nrow(df)
}
return(df)
}
by_id <- group_by(res_df, id)
agg_df <- do(by_id, summa(.))
agg_df <- distinct(agg_df[,c("id",colnames(agg_df)[endsWith(colnames(agg_df), "_mean") |
endsWith(colnames(agg_df), "_median") |
endsWith(colnames(agg_df), "_q25") |
endsWith(colnames(agg_df), "_q75") |
endsWith(colnames(agg_df), "_se")]) ])
agg_df <- as.data.frame(agg_df)
agg_df_ls[[rn]] <- merge(agg_df, simulation_conditions, by="id", all.x=T)
}
source("./sim_plot_k_fold.R")
p <- annotate_figure(p, top = text_grob("Approximating K-fold Deviance", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/k_fold.png"), width = 10, height = 10, bg="white")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list = ls())
library(dplyr)
library(rslurm)
library(ggplot2)
library(tidyr)
library(ggpubr)
lr_output_fname <- "output_run_lr_5days_2024-06-21 00_20_46.077512.RDS"
lm_output_fname <- "output_run_lm_2days_2024-06-21 00_20_40.358054.RDS"
agg_df_ls <- list()
for(rn in c("lr", "lm")){
if(rn == "lr") output <- readRDS(paste0("./res/", lr_output_fname))
if(rn == "lm") output <- readRDS(paste0("./res/", lm_output_fname))
source("./sim_conditions.R")
simulation_conditions <- simulation_conditions[,setdiff(colnames(simulation_conditions),"iter")]
res_df <- merge(output, simulation_conditions, by="id", all.x=T)
res_df <- res_df %>% filter(!sigma_rdm_fix_ratio==5) %>%as.data.frame()
if(!"nicc1" %in%colnames(res_df) ){
res_df$nicc1 <- res_df$nic1 # comment out remember
print("error : nic used for nicc ")
}
res_df$nicc_diff <- (res_df$nicc1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
res_df$nic_diff <- (res_df$nic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
res_df$aic_diff <- (res_df$aic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
res_df$bic_diff <- (res_df$bic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
# lr_res_df_name <- gsub(".RDS",".csv",lr_output_fname)
# lm_res_df_name <- gsub(".RDS",".csv",lm_output_fname)
# if(!file.exists(paste0("./res/", lr_res_df_name))) write.csv(res_df,paste0("./res/", lr_res_df_name),row.names = F)
# if(!file.exists(paste0("./res/", lm_res_df_name))) write.csv(res_df,paste0("./res/", lm_res_df_name),row.names = F)
summa <- function(df){
for(cl in c("nicc_diff", "nic_diff", "aic_diff", "bic_diff") ){
df[[paste0(cl,"_mean")]] <- mean(df[[cl]], na.rm=T)
df[[paste0(cl,"_median")]] <- median(df[[cl]], na.rm=T)
df[[paste0(cl,"_q25")]] <- quantile(df[[cl]],0.025, na.rm=T)
df[[paste0(cl,"_q75")]] <- quantile(df[[cl]],0.975, na.rm=T)
df[[paste0(cl,"_se")]] <- sd(df[[cl]], na.rm=T)/nrow(df)
}
return(df)
}
by_id <- group_by(res_df, id)
agg_df <- do(by_id, summa(.))
agg_df <- distinct(agg_df[,c("id",colnames(agg_df)[endsWith(colnames(agg_df), "_mean") |
endsWith(colnames(agg_df), "_median") |
endsWith(colnames(agg_df), "_q25") |
endsWith(colnames(agg_df), "_q75") |
endsWith(colnames(agg_df), "_se")]) ])
agg_df <- as.data.frame(agg_df)
agg_df_ls[[rn]] <- merge(agg_df, simulation_conditions, by="id", all.x=T)
}
source("./sim_plot_N.R")
p_n <- p
p_n <- annotate_figure(p_n, fig.lab = "\nA.", fig.lab.face = "bold", fig.lab.size = 10,
top = text_grob("\n Clustering by number of observations per cluster", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
source("./sim_plot_phi.R")
p_p <- p
p_p <- annotate_figure(p_p, fig.lab = "\nB.", fig.lab.face = "bold", fig.lab.size = 10,
top = text_grob("\n Clustering in predictors\n(by within-cluster autocorrelation)", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
source("./sim_plot_sigma_ratio.R")
p_r <- p
p_r <- annotate_figure(p_r, fig.lab = "\nC.", fig.lab.face = "bold", fig.lab.size = 10,
top = text_grob("\n Clustering in response\n(by strength of random effects)", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
p_bottom <- ggarrange(p_p, p_r, ncol=2, nrow=1, widths = c(3,3) )
p <- ggarrange(p_n, p_bottom, nrow = 2, ncol=1, heights = c(1,1))
# r <- rev(c(0.5, 1, 5, 10))[4]
# na <- c(0,1)[1]
# source("./sim_conditions_plot.R")
p <- annotate_figure(p, top = text_grob("Approximating Leave-one-cluster-out Deviance (looDeviance)", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/nic_vs_aic.png"), width = 7, height = 8, bg="white")
# special scenario
source("./sim_plot_unbalance.R")
p_na <- annotate_figure(p, fig.lab = "\nA.", fig.lab.face = "bold", fig.lab.size = 8,
top = text_grob("\n Unbalanced cluster sizes", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
# p_na %>% ggsave(filename=paste0("./res/balance_vs_unbalance.png"), width = 7, height = 6, bg="white")
source("./sim_plot_small_cluster.R")
p_sm <- annotate_figure(p, fig.lab = "\nB.", fig.lab.face = "bold", fig.lab.size = 8,
top = text_grob("\n Small sample of clusters", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
p_spec <- ggarrange(p_na, p_sm, ncol=2, nrow=1, widths = c(2.5,3) )
p_spec <- annotate_figure(p_spec, top = text_grob("Approximating looDeviance (special scenarios)", size = 14, face = "bold"))
p_spec %>% ggsave(filename=paste0("./res/special_scenario.png"), width = 12, height = 7, bg="white")
p %>% ggsave(filename=paste0("./res/nic_vs_aic.png"), width = 10, height = 9, bg="white")
p <- ggarrange(p_n, p_bottom, nrow = 2, ncol=1, heights = c(1,1))
# r <- rev(c(0.5, 1, 5, 10))[4]
# na <- c(0,1)[1]
# source("./sim_conditions_plot.R")
p <- annotate_figure(p, top = text_grob("Approximating Leave-one-cluster-out Deviance (looDeviance)", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/nic_vs_aic.png"), width = 10, height = 9, bg="white")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list = ls())
library(dplyr)
library(rslurm)
library(ggplot2)
library(tidyr)
library(ggpubr)
lr_output_fname <- "output_run_lr_5days_2024-06-21 00_20_46.077512.RDS"
lm_output_fname <- "output_run_lm_2days_2024-06-21 00_20_40.358054.RDS"
agg_df_ls <- list()
for(rn in c("lr", "lm")){
if(rn == "lr") output <- readRDS(paste0("./res/", lr_output_fname))
if(rn == "lm") output <- readRDS(paste0("./res/", lm_output_fname))
source("./sim_conditions.R")
simulation_conditions <- simulation_conditions[,setdiff(colnames(simulation_conditions),"iter")]
res_df <- merge(output, simulation_conditions, by="id", all.x=T)
res_df <- res_df %>% filter(!sigma_rdm_fix_ratio==5) %>%as.data.frame()
if(!"nicc1" %in%colnames(res_df) ){
res_df$nicc1 <- res_df$nic1 # comment out remember
print("error : nic used for nicc ")
}
res_df$nicc_diff <- (res_df$nicc1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
res_df$nic_diff <- (res_df$nic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
res_df$aic_diff <- (res_df$aic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
res_df$bic_diff <- (res_df$bic1 - res_df$loodev1)/(res_df$n_cluster*res_df$n_obs_per_cluster)#res_df$loodev1 #abs()
# lr_res_df_name <- gsub(".RDS",".csv",lr_output_fname)
# lm_res_df_name <- gsub(".RDS",".csv",lm_output_fname)
# if(!file.exists(paste0("./res/", lr_res_df_name))) write.csv(res_df,paste0("./res/", lr_res_df_name),row.names = F)
# if(!file.exists(paste0("./res/", lm_res_df_name))) write.csv(res_df,paste0("./res/", lm_res_df_name),row.names = F)
summa <- function(df){
for(cl in c("nicc_diff", "nic_diff", "aic_diff", "bic_diff") ){
df[[paste0(cl,"_mean")]] <- mean(df[[cl]], na.rm=T)
df[[paste0(cl,"_median")]] <- median(df[[cl]], na.rm=T)
df[[paste0(cl,"_q25")]] <- quantile(df[[cl]],0.025, na.rm=T)
df[[paste0(cl,"_q75")]] <- quantile(df[[cl]],0.975, na.rm=T)
df[[paste0(cl,"_se")]] <- sd(df[[cl]], na.rm=T)/nrow(df)
}
return(df)
}
by_id <- group_by(res_df, id)
agg_df <- do(by_id, summa(.))
agg_df <- distinct(agg_df[,c("id",colnames(agg_df)[endsWith(colnames(agg_df), "_mean") |
endsWith(colnames(agg_df), "_median") |
endsWith(colnames(agg_df), "_q25") |
endsWith(colnames(agg_df), "_q75") |
endsWith(colnames(agg_df), "_se")]) ])
agg_df <- as.data.frame(agg_df)
agg_df_ls[[rn]] <- merge(agg_df, simulation_conditions, by="id", all.x=T)
}
source("./sim_plot_N.R")
p_n <- p
p_n <- annotate_figure(p_n, fig.lab = "\nA.", fig.lab.face = "bold", fig.lab.size = 10,
top = text_grob("\n Clustering by number of observations per cluster", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
source("./sim_plot_phi.R")
p_p <- p
p_p <- annotate_figure(p_p, fig.lab = "\nB.", fig.lab.face = "bold", fig.lab.size = 10,
top = text_grob("\n Clustering in predictors\n(by within-cluster autocorrelation)", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
source("./sim_plot_sigma_ratio.R")
p_r <- p
p_r <- annotate_figure(p_r, fig.lab = "\nC.", fig.lab.face = "bold", fig.lab.size = 10,
top = text_grob("\n Clustering in response\n(by strength of random effects)", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
p_bottom <- ggarrange(p_p, p_r, ncol=2, nrow=1, widths = c(3,3) )
p <- ggarrange(p_n, p_bottom, nrow = 2, ncol=1, heights = c(1,1))
# r <- rev(c(0.5, 1, 5, 10))[4]
# na <- c(0,1)[1]
# source("./sim_conditions_plot.R")
p <- annotate_figure(p, top = text_grob("Approximating Leave-one-cluster-out Deviance (looDeviance)", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/nic_vs_aic.png"), width = 10, height = 10, bg="white")
# special scenario
source("./sim_plot_unbalance.R")
p_na <- annotate_figure(p, fig.lab = "\nA.", fig.lab.face = "bold", fig.lab.size = 8,
top = text_grob("\n Unbalanced cluster sizes", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
# p_na %>% ggsave(filename=paste0("./res/balance_vs_unbalance.png"), width = 7, height = 6, bg="white")
source("./sim_plot_small_cluster.R")
p_sm <- annotate_figure(p, fig.lab = "\nB.", fig.lab.face = "bold", fig.lab.size = 8,
top = text_grob("\n Small sample of clusters", size = 10, face = "bold", x=0,hjust=0),
left = text_grob("Error", size = 8, face = "bold", rot = 90),
bottom = text_grob("Generating model size", size = 8, face = "bold") )
p_spec <- ggarrange(p_na, p_sm, ncol=2, nrow=1, widths = c(2.5,3) )
p_spec <- annotate_figure(p_spec, top = text_grob("Approximating looDeviance (special scenarios)", size = 14, face = "bold"))
p_spec %>% ggsave(filename=paste0("./res/special_scenario.png"), width = 14, height = 8, bg="white")
p <- ggarrange(p_n, p_bottom, nrow = 2, ncol=1, heights = c(1,1))
# r <- rev(c(0.5, 1, 5, 10))[4]
# na <- c(0,1)[1]
# source("./sim_conditions_plot.R")
p <- annotate_figure(p, top = text_grob("Approximating Leave-one-cluster-out Deviance (looDeviance)", size = 14, face = "bold"))
p %>% ggsave(filename=paste0("./res/nic_vs_aic.png"), width = 9, height = 10, bg="white")
