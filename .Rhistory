best_size_1se_min <- min(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_size_1se_max <- max(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_df <- bind_rows(best_df, data.frame(i,score,best_size, best_score, score_1se, best_size_1se_min,best_size_1se_max))
}
best_df_iter[[sn]] <- bind_rows(best_df_iter[[sn]], best_df)
}
}
source("./model_selection_plot.R")
source("./model_selection_stat.R")
if(cluster_size == 150){
library(grid)
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),#text_grob("Strong clustering condition", size = 18, face = "bold"),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (Strong Clustering Condition)", size = 20, face = "bold"))
}else{
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (Weak Clustering Condition)", size = 20, face = "bold"))
}
f <- paste0("./res/model_select_example_",model_size,"_",cluster_size,en,".png")
p_model_select %>% ggsave(filename=f, width = 11, height = 10, bg="white")
f <- paste0("./res/model_select_error_",model_size,"_",cluster_size,en,".png")
p_size %>% ggsave(filename=f, width = 11, height = 5, bg="white")
}
img1 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_", weak_cluster_size, en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_lower <- image_append(c(img1, img2), stack = FALSE)
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_upper <- image_append(c(img1, img2), stack = FALSE)
combined_image <- image_append(c(combined_upper, combined_lower), stack = T)
image_write(combined_image, paste0("./res/model_select_full.png"))
# split vertically
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_strong.png"))
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_",weak_cluster_size,en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_weak.png"))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls())
model_size = 5
weak_cluster_size = 5
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(magick)
for(cluster_size in c(weak_cluster_size,150)){
source("./model_selection_step_loodev.R")# step-wise by loodev
en <- "" #"_random" #
sim_condition = simulation_conditions[which(simulation_conditions$id==1),]
res_df_iter <- list()
best_df_iter <- list()
for(sn in c("lm","lr")){
res_df_iter[[sn]] <- readRDS(paste0("./res/model_select_",sn,"_",unique(sim_condition$n_ttl_betas),"_",unique(sim_condition$n_obs_per_cluster),en,".RDS"))
# res_df_iter[[sn]]$nicc <- res_df_iter[[sn]]$nic
best_df_iter[[sn]] <- data.frame()
for(i in sort(unique(res_df_iter[[sn]]$iter))){
res_df <- res_df_iter[[sn]] %>% filter(iter==i) %>% as.data.frame()
# res_df$loodev[res_df$loodev > quantile(res_df$loodev,0.95)] <- quantile(res_df$loodev,0.95)
res_df_iter[[sn]][which(res_df_iter[[sn]]$iter==i), ] <- res_df
best_df <- data.frame()
for(score in c("loodev", "nic", "nicc", "aic", "bic")){
best_size <- res_df$model_size[which(res_df[,score]==min(res_df[,score]))][1]
best_score <- res_df[,score][which(res_df[,score]==min(res_df[,score]))][1]
score_1se <- sd(res_df[,score])/sqrt(nrow(res_df))
best_size_1se_min <- min(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_size_1se_max <- max(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_df <- bind_rows(best_df, data.frame(i,score,best_size, best_score, score_1se, best_size_1se_min,best_size_1se_max))
}
best_df_iter[[sn]] <- bind_rows(best_df_iter[[sn]], best_df)
}
}
source("./model_selection_plot.R")
source("./model_selection_stat.R")
if(cluster_size == 150){
library(grid)
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),#text_grob("Strong clustering condition", size = 18, face = "bold"),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (Strong Clustering Condition)", size = 20, face = "bold"))
}else{
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (Weak Clustering Condition)", size = 20, face = "bold"))
}
f <- paste0("./res/model_select_example_",model_size,"_",cluster_size,en,".png")
p_model_select %>% ggsave(filename=f, width = 11, height = 10, bg="white")
f <- paste0("./res/model_select_error_",model_size,"_",cluster_size,en,".png")
p_size %>% ggsave(filename=f, width = 11, height = 5, bg="white")
}
img1 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_", weak_cluster_size, en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_lower <- image_append(c(img1, img2), stack = FALSE)
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_upper <- image_append(c(img1, img2), stack = FALSE)
combined_image <- image_append(c(combined_upper, combined_lower), stack = T)
image_write(combined_image, paste0("./res/model_select_full.png"))
# split vertically
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_strong.png"))
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_",weak_cluster_size,en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_weak.png"))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls())
model_size = 5
weak_cluster_size = 5
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(magick)
for(cluster_size in c(weak_cluster_size,150)){
source("./model_selection_step_loodev.R")# step-wise by loodev
en <- "" #"_random" #
sim_condition = simulation_conditions[which(simulation_conditions$id==1),]
res_df_iter <- list()
best_df_iter <- list()
for(sn in c("lm","lr")){
res_df_iter[[sn]] <- readRDS(paste0("./res/model_select_",sn,"_",unique(sim_condition$n_ttl_betas),"_",unique(sim_condition$n_obs_per_cluster),en,".RDS"))
# res_df_iter[[sn]]$nicc <- res_df_iter[[sn]]$nic
best_df_iter[[sn]] <- data.frame()
for(i in sort(unique(res_df_iter[[sn]]$iter))){
res_df <- res_df_iter[[sn]] %>% filter(iter==i) %>% as.data.frame()
# res_df$loodev[res_df$loodev > quantile(res_df$loodev,0.95)] <- quantile(res_df$loodev,0.95)
res_df_iter[[sn]][which(res_df_iter[[sn]]$iter==i), ] <- res_df
best_df <- data.frame()
for(score in c("loodev", "nic", "nicc", "aic", "bic")){
best_size <- res_df$model_size[which(res_df[,score]==min(res_df[,score]))][1]
best_score <- res_df[,score][which(res_df[,score]==min(res_df[,score]))][1]
score_1se <- sd(res_df[,score])/sqrt(nrow(res_df))
best_size_1se_min <- min(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_size_1se_max <- max(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_df <- bind_rows(best_df, data.frame(i,score,best_size, best_score, score_1se, best_size_1se_min,best_size_1se_max))
}
best_df_iter[[sn]] <- bind_rows(best_df_iter[[sn]], best_df)
}
}
source("./model_selection_plot.R")
source("./model_selection_stat.R")
if(cluster_size == 150){
library(grid)
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),#text_grob("Strong clustering condition", size = 18, face = "bold"),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (Strong Clustering Condition)", size = 20, face = "bold"))
}else{
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (Weak Clustering Condition)", size = 20, face = "bold"))
}
f <- paste0("./res/model_select_example_",model_size,"_",cluster_size,en,".png")
p_model_select %>% ggsave(filename=f, width = 11, height = 10, bg="white")
f <- paste0("./res/model_select_error_",model_size,"_",cluster_size,en,".png")
p_size %>% ggsave(filename=f, width = 11, height = 5, bg="white")
}
img1 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_", weak_cluster_size, en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_lower <- image_append(c(img1, img2), stack = FALSE)
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_upper <- image_append(c(img1, img2), stack = FALSE)
combined_image <- image_append(c(combined_upper, combined_lower), stack = T)
image_write(combined_image, paste0("./res/model_select_full.png"))
# split vertically
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_strong.png"))
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_",weak_cluster_size,en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_weak.png"))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls())
model_size = 5
weak_cluster_size = 5
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(magick)
for(cluster_size in c(weak_cluster_size,150)){
source("./model_selection_step_loodev.R")# step-wise by loodev
en <- "" #"_random" #
sim_condition = simulation_conditions[which(simulation_conditions$id==1),]
res_df_iter <- list()
best_df_iter <- list()
for(sn in c("lm","lr")){
res_df_iter[[sn]] <- readRDS(paste0("./res/model_select_",sn,"_",unique(sim_condition$n_ttl_betas),"_",unique(sim_condition$n_obs_per_cluster),en,".RDS"))
# res_df_iter[[sn]]$nicc <- res_df_iter[[sn]]$nic
best_df_iter[[sn]] <- data.frame()
for(i in sort(unique(res_df_iter[[sn]]$iter))){
res_df <- res_df_iter[[sn]] %>% filter(iter==i) %>% as.data.frame()
# res_df$loodev[res_df$loodev > quantile(res_df$loodev,0.95)] <- quantile(res_df$loodev,0.95)
res_df_iter[[sn]][which(res_df_iter[[sn]]$iter==i), ] <- res_df
best_df <- data.frame()
for(score in c("loodev", "nic", "nicc", "aic", "bic")){
best_size <- res_df$model_size[which(res_df[,score]==min(res_df[,score]))][1]
best_score <- res_df[,score][which(res_df[,score]==min(res_df[,score]))][1]
score_1se <- sd(res_df[,score])/sqrt(nrow(res_df))
best_size_1se_min <- min(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_size_1se_max <- max(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_df <- bind_rows(best_df, data.frame(i,score,best_size, best_score, score_1se, best_size_1se_min,best_size_1se_max))
}
best_df_iter[[sn]] <- bind_rows(best_df_iter[[sn]], best_df)
}
}
source("./model_selection_plot.R")
source("./model_selection_stat.R")
if(cluster_size == 150){
library(grid)
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),#text_grob("Strong clustering condition", size = 18, face = "bold"),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (150 obs/cluster)", size = 20, face = "bold"))
}else{
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (5 obs/cluster)", size = 20, face = "bold"))
}
f <- paste0("./res/model_select_example_",model_size,"_",cluster_size,en,".png")
p_model_select %>% ggsave(filename=f, width = 11, height = 10, bg="white")
f <- paste0("./res/model_select_error_",model_size,"_",cluster_size,en,".png")
p_size %>% ggsave(filename=f, width = 11, height = 5, bg="white")
}
img1 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_", weak_cluster_size, en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_lower <- image_append(c(img1, img2), stack = FALSE)
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_upper <- image_append(c(img1, img2), stack = FALSE)
combined_image <- image_append(c(combined_upper, combined_lower), stack = T)
image_write(combined_image, paste0("./res/model_select_full.png"))
# split vertically
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_strong.png"))
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_",weak_cluster_size,en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_weak.png"))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls())
model_size = 5
weak_cluster_size = 5
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(magick)
for(cluster_size in c(weak_cluster_size,150)){
source("./model_selection_step_loodev.R")# step-wise by loodev
en <- "" #"_random" #
sim_condition = simulation_conditions[which(simulation_conditions$id==1),]
res_df_iter <- list()
best_df_iter <- list()
for(sn in c("lm","lr")){
res_df_iter[[sn]] <- readRDS(paste0("./res/model_select_",sn,"_",unique(sim_condition$n_ttl_betas),"_",unique(sim_condition$n_obs_per_cluster),en,".RDS"))
# res_df_iter[[sn]]$nicc <- res_df_iter[[sn]]$nic
best_df_iter[[sn]] <- data.frame()
for(i in sort(unique(res_df_iter[[sn]]$iter))){
res_df <- res_df_iter[[sn]] %>% filter(iter==i) %>% as.data.frame()
# res_df$loodev[res_df$loodev > quantile(res_df$loodev,0.95)] <- quantile(res_df$loodev,0.95)
res_df_iter[[sn]][which(res_df_iter[[sn]]$iter==i), ] <- res_df
best_df <- data.frame()
for(score in c("loodev", "nic", "nicc", "aic", "bic")){
best_size <- res_df$model_size[which(res_df[,score]==min(res_df[,score]))][1]
best_score <- res_df[,score][which(res_df[,score]==min(res_df[,score]))][1]
score_1se <- sd(res_df[,score])/sqrt(nrow(res_df))
best_size_1se_min <- min(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_size_1se_max <- max(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_df <- bind_rows(best_df, data.frame(i,score,best_size, best_score, score_1se, best_size_1se_min,best_size_1se_max))
}
best_df_iter[[sn]] <- bind_rows(best_df_iter[[sn]], best_df)
}
}
source("./model_selection_plot.R")
source("./model_selection_stat.R")
if(cluster_size == 150){
library(grid)
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),#text_grob("Strong clustering condition", size = 18, face = "bold"),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (150 obs/cluster)", size = 20, face = "bold"))
}else{
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (5 obs/cluster)", size = 20, face = "bold"))
}
f <- paste0("./res/model_select_example_",model_size,"_",cluster_size,en,".png")
p_model_select %>% ggsave(filename=f, width = 11, height = 10, bg="white")
f <- paste0("./res/model_select_error_",model_size,"_",cluster_size,en,".png")
p_size %>% ggsave(filename=f, width = 11, height = 5, bg="white")
}
img1 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_", weak_cluster_size, en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_lower <- image_append(c(img1, img2), stack = FALSE)
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_upper <- image_append(c(img1, img2), stack = FALSE)
combined_image <- image_append(c(combined_upper, combined_lower), stack = T)
image_write(combined_image, paste0("./res/model_select_full.png"))
# split vertically
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_150",en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_150",en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_strong.png"))
img1 <- image_read(paste0("./res/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_read(paste0("./res/model_select_example_",model_size,"_",weak_cluster_size,en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/model_select_weak.png"))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list = ls())
library(dplyr)
library(rslurm)
library(ggplot2)
library(tidyr)
library(ggpubr)
lr_output_fname <- "output_run_lr_5days_2024-04-26 09_26_53.793405.RDS"
lm_output_fname <- "output_run_lm_2days_2024-04-26 09_26_50.318184.RDS"
agg_df_ls <- list()
for(rn in c("lr", "lm")){
if(rn == "lr") output <- readRDS(paste0("./res/", lr_output_fname))
if(rn == "lm") output <- readRDS(paste0("./res/", lm_output_fname))
source("./sim_conditions.R")
res_df <- merge(output, simulation_conditions, by="id", all.x=T)
res_df$nic_diff <- abs(res_df$nic1 - res_df$loodev1)
res_df$aic_diff <- abs(res_df$aic1 - res_df$loodev1)
res_df$bic_diff <- abs(res_df$bic1 - res_df$loodev1)
lr_res_df_name <- gsub(".RDS",".csv",lr_output_fname)
lm_res_df_name <- gsub(".RDS",".csv",lm_output_fname)
# if(!file.exists(paste0("./res/", lr_res_df_name))) write.csv(res_df,paste0("./res/", lr_res_df_name),row.names = F)
# if(!file.exists(paste0("./res/", lm_res_df_name))) write.csv(res_df,paste0("./res/", lm_res_df_name),row.names = F)
agg_df <- res_df %>%
group_by(id) %>%
summarise(niter = n(),
bias0 = median(bias0), bias0_se = sd(bias0)/sqrt(niter),
bias1 = median(bias1), bias1_se = sd(bias1)/sqrt(niter),
se_ratio0 = median(se_ratio0), se_ratio0_se = sd(se_ratio0)/sqrt(niter),
se_ratio1 = median(se_ratio1), se_ratio1_se = sd(se_ratio1)/sqrt(niter),
nic_diff = median(nic_diff), nic_diff_se = sd(nic_diff)/sqrt(niter),
aic_diff = median(aic_diff), aic_diff_se = sd(aic_diff)/sqrt(niter),
bic_diff = median(bic_diff), bic_diff_se = sd(bic_diff)/sqrt(niter),
loopred0 = median(loopred0), loopred0_se = sd(loopred0)/sqrt(niter),
loopred1 = median(loopred1), loopred1_se = sd(loopred1)/sqrt(niter),
loodev0 = median(loodev0), loodev0_se = sd(loodev0)/sqrt(niter),
loodev1 = median(loodev1), loodev1_se = sd(loodev1)/sqrt(niter)
)
summa <- function(df){
for(cl in c("nic_diff", "aic_diff", "bic_diff") ){
df[[paste0(cl,"_mean")]] <- mean(df[[cl]], na.rm=T)
df[[paste0(cl,"_median")]] <- median(df[[cl]], na.rm=T)
df[[paste0(cl,"_q25")]] <- quantile(df[[cl]],0.25, na.rm=T)
df[[paste0(cl,"_q75")]] <- quantile(df[[cl]],0.75, na.rm=T)
df[[paste0(cl,"_se")]] <- sd(df[[cl]], na.rm=T)/nrow(df)
}
return(df)
}
by_id <- group_by(res_df, id)
agg_df <- do(by_id, summa(.))
agg_df <- distinct(agg_df[,c("id",colnames(agg_df)[endsWith(colnames(agg_df), "_mean") |
endsWith(colnames(agg_df), "_median") |
endsWith(colnames(agg_df), "_q25") |
endsWith(colnames(agg_df), "_q75") |
endsWith(colnames(agg_df), "_se")]) ])
agg_df <- as.data.frame(agg_df)
agg_df_ls[[rn]] <- merge(agg_df, simulation_conditions, by="id", all.x=T)
}
r <- rev(c(0.5, 1, 5, 10))[2]
na <- c(0,1)[1]
source("./sim_conditions_plot.R")
p
r <- rev(c(0.5, 1, 5, 10))[3]
na <- c(0,1)[1]
source("./sim_conditions_plot.R")
p
r <- rev(c(0.5, 1, 5, 10))[2]
na <- c(0,1)[1]
source("./sim_conditions_plot.R")
p
r <- rev(c(0.5, 1, 5, 10))[3]
na <- c(0,1)[1]
source("./sim_conditions_plot.R")
p
r <- rev(c(0.5, 1, 5, 10))[4]
na <- c(0,1)[1]
source("./sim_conditions_plot.R")
p
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls())
model_size = 5
weak_cluster_size = 5
sigma_rdm_fix_ratio = 10 #c(0.5,1,5,10)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(magick)
for(cluster_size in c(weak_cluster_size,150)){
source("./model_selection_step_loodev.R")# step-wise by loodev
en <- "" #"_random" #
sim_condition = simulation_conditions[which(simulation_conditions$id==1),]
res_df_iter <- list()
best_df_iter <- list()
for(sn in c("lm","lr")){
res_df_iter[[sn]] <- readRDS(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_",sn,"_",unique(sim_condition$n_ttl_betas),"_",unique(sim_condition$n_obs_per_cluster),en,".RDS"))
# res_df_iter[[sn]]$nicc <- res_df_iter[[sn]]$nic
best_df_iter[[sn]] <- data.frame()
for(i in sort(unique(res_df_iter[[sn]]$iter))){
res_df <- res_df_iter[[sn]] %>% filter(iter==i) %>% as.data.frame()
# res_df$loodev[res_df$loodev > quantile(res_df$loodev,0.95)] <- quantile(res_df$loodev,0.95)
res_df_iter[[sn]][which(res_df_iter[[sn]]$iter==i), ] <- res_df
best_df <- data.frame()
for(score in c("loodev", "nic", "nicc", "aic", "bic")){
best_size <- res_df$model_size[which(res_df[,score]==min(res_df[,score]))][1]
best_score <- res_df[,score][which(res_df[,score]==min(res_df[,score]))][1]
score_1se <- sd(res_df[,score])/sqrt(nrow(res_df))
best_size_1se_min <- min(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_size_1se_max <- max(res_df$model_size[which(abs(res_df[,score]-min(res_df[,score]))<=score_1se)])
best_df <- bind_rows(best_df, data.frame(i,score,best_size, best_score, score_1se, best_size_1se_min,best_size_1se_max))
}
best_df_iter[[sn]] <- bind_rows(best_df_iter[[sn]], best_df)
}
}
source("./model_selection_plot.R")
source("./model_selection_stat.R")
if(cluster_size == 150){
library(grid)
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),#text_grob("Strong clustering condition", size = 18, face = "bold"),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (150 obs/cluster)", size = 20, face = "bold"))
}else{
p_model_select <- annotate_figure(p_model_select, top = text_grob("Model Selection Process", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "B.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Error in 100 iterations", size = 18, face = "bold", hjust = -0.15,x=0),
fig.lab = "A.", fig.lab.face = "bold", fig.lab.size = 20)
p_size <- annotate_figure(p_size, top = text_grob("Model Selection Accuracy (5 obs/cluster)", size = 20, face = "bold"))
}
f <- paste0("./res/",sigma_rdm_fix_ratio,"/model_select_example_",model_size,"_",cluster_size,en,".png")
p_model_select %>% ggsave(filename=f, width = 11, height = 10, bg="white")
f <- paste0("./res/",sigma_rdm_fix_ratio,"/model_select_error_",model_size,"_",cluster_size,en,".png")
p_size %>% ggsave(filename=f, width = 11, height = 5, bg="white")
}
img1 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_example_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_example_",model_size,"_", weak_cluster_size, en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_lower <- image_append(c(img1, img2), stack = FALSE)
img1 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_error_",model_size,"_150",en,".png"))
img1 <- image_border(img1, "black", "10x10")
img2 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_border(img2, "black", "10x10")
combined_upper <- image_append(c(img1, img2), stack = FALSE)
combined_image <- image_append(c(combined_upper, combined_lower), stack = T)
image_write(combined_image, paste0("./res/",sigma_rdm_fix_ratio,"/model_select_full.png"))
# split vertically
img1 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_error_",model_size,"_150",en,".png"))
img2 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_example_",model_size,"_150",en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/",sigma_rdm_fix_ratio,"/model_select_strong.png"))
img1 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_error_",model_size,"_",weak_cluster_size,en,".png"))
img2 <- image_read(paste0("./res/",sigma_rdm_fix_ratio,"/model_select_example_",model_size,"_",weak_cluster_size,en,".png"))
combined_image <- image_append(c(img1, img2), stack = T)
image_write(combined_image, paste0("./res/",sigma_rdm_fix_ratio,"/model_select_weak.png"))
